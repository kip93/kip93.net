#!/usr/bin/env python3

from datetime import datetime
from pathlib import Path
from subprocess import run
from sys import argv as args
from sys import stdin


if args[1:]:
    # SSH into server and get logs
    logs = run(
        ["ssh", args[1], "python3 -"],
        text=True,
        input=Path(args[0]).read_text(),  # The contents of this script
        capture_output=True,
        check=True,
    ).stdout

else:
    # Get log text
    logs = "".join(
        run(["gunzip", "-c", path], text=True, capture_output=True, check=True).stdout
        if str(path).endswith(".gz")
        else run(["cat", path], text=True, capture_output=True, check=True).stdout
        for path in Path("/var/log/nginx/").expanduser().resolve().rglob("access*")
    )


if stdin.isatty():
    # Create report using the server logs
    run(
        [
            # https://goaccess.io/
            "goaccess",
            # Read stdin
            "-",
            # Log format
            '--log-format=[%^ %x] %h "%m %U %H" -> %s %b %T',
            "--date-format=%*",
            "--time-format=%*",
            # HTML output
            "-o",
            str(Path(__file__).parent / "report.html"),
            f"--html-report-title=Report â€” {datetime.now().strftime('%Y/%m/%d %H:%M:%S')}",
            "--no-html-last-updated",
            # Enabled panels
            "--enable-panel=VISITORS",
            "--enable-panel=REQUESTS",
            "--enable-panel=HOSTS",
            "--enable-panel=VISIT_TIMES",
            "--enable-panel=STATUS_CODES",
            # Disabled panels
            "--ignore-panel=REQUESTS_STATIC",
            "--ignore-panel=NOT_FOUND",
            "--ignore-panel=OS",
            "--ignore-panel=BROWSERS",
            "--ignore-panel=VIRTUAL_HOSTS",
            "--ignore-panel=REFERRERS",
            "--ignore-panel=REFERRING_SITES",
            "--ignore-panel=KEYPHRASES",
            "--ignore-panel=REMOTE_USER",
            "--ignore-panel=CACHE_STATUS",
            "--ignore-panel=GEO_LOCATION",
            "--ignore-panel=MIME_TYPE",
            "--ignore-panel=TLS_TYPE",
            # No loading message
            "--no-parsing-spinner",
        ],
        text=True,
        input=logs,
        check=True,
    )

else:
    # On remote server, just print to stdout to be read on the other side
    print(logs.rstrip())
